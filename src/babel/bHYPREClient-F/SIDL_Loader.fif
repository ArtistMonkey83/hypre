C       
C       File:          SIDL_Loader_Impl.f
C       Symbol:        SIDL.Loader-v0.8.2
C       Symbol Type:   class
C       Babel Version: 0.8.2
C       SIDL Created:  20030326 16:09:17 PST
C       Generated:     20030401 14:48:19 PST
C       Release:       $Name: V1-9-0b $
C       Revision:      @(#) $Id: SIDL_Loader.fif,v 1.3 2003/04/01 23:57:13 painter Exp $
C       Description:   Client-side documentation text for SIDL.Loader
C       
C       Copyright (c) 2000-2002, The Regents of the University of California.
C       Produced at the Lawrence Livermore National Laboratory.
C       Written by the Components Team <components@llnl.gov>
C       All rights reserved.
C       
C       This file is part of Babel. For more information, see
C       http://www.llnl.gov/CASC/components/. Please read the COPYRIGHT file
C       for Our Notice and the LICENSE file for the GNU Lesser General Public
C       License.
C       
C       This program is free software; you can redistribute it and/or modify it
C       under the terms of the GNU Lesser General Public License (as published by
C       the Free Software Foundation) version 2.1 dated February 1999.
C       
C       This program is distributed in the hope that it will be useful, but
C       WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY OF
C       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the terms and
C       conditions of the GNU Lesser General Public License for more details.
C       
C       You should have recieved a copy of the GNU Lesser General Public License
C       along with this program; if not, write to the Free Software Foundation,
C       Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
C       
C       WARNING: Automatically generated; changes will be lost
C       
C       babel-version = 0.8.2
C       source-line   = 266
C       source-url    = file:/home/epperly/current/release_082/linux_gcc2/share/../../babel-0.8.2/runtime/sidl/sidl.sidl
C       

        THIS FILE IS DOCUMENTATION - DO NOT COMPILE IT!

C       
C       Symbol "SIDL.Loader" (version 0.8.2)
C       
C       Class <code>Loader</code> manages dyanamic loading and symbol name
C       resolution for the SIDL runtime system.  The <code>Loader</code> class
C       manages a library search path and keeps a record of all libraries
C       loaded through this interface, including the initial "global" symbols
C       in the main program.  Unless explicitly set, the search path is taken
C       from the environment variable SIDL_DLL_PATH, which is a semi-colon
C       separated sequence of URIs as described in class <code>DLL</code>.
C       




C       
C       Create an instance of class SIDL.Loader
C       

        subroutine SIDL_Loader__create_f(retval)
        implicit none
C       out SIDL.Loader retval
        integer*8 retval
        end


C       
C       Cast method for interface and type conversions.
C       

        subroutine SIDL_Loader__cast_f(ref, retval)
        implicit none
C       in opaque ref
        integer*8 ref
C       out SIDL.Loader retval
        integer*8 retval
        end


C       
C       Cast method for interface and class type conversions.
C       

        subroutine SIDL_Loader__cast2_f(self, name, retval)
        implicit none
C       in SIDL.Loader self
        integer*8 self
C       in string name
        character*(*) name
C       out opaque retval
        integer*8 retval
        end


C       
C       <p>
C       Add one to the intrinsic reference count in the underlying object.
C       Object in <code>SIDL</code> have an intrinsic reference count.
C       Objects continue to exist as long as the reference count is
C       positive. Clients should call this method whenever they
C       create another ongoing reference to an object or interface.
C       </p>
C       <p>
C       This does not have a return value because there is no language
C       independent type that can refer to an interface or a
C       class.
C       </p>
C       

        subroutine SIDL_Loader_addRef_f(self)
        implicit none
C       in SIDL.Loader self
        integer*8 self
        end


C       
C       Decrease by one the intrinsic reference count in the underlying
C       object, and delete the object if the reference is non-positive.
C       Objects in <code>SIDL</code> have an intrinsic reference count.
C       Clients should call this method whenever they remove a
C       reference to an object or interface.
C       

        subroutine SIDL_Loader_deleteRef_f(self)
        implicit none
C       in SIDL.Loader self
        integer*8 self
        end


C       
C       Return true if and only if <code>obj</code> refers to the same
C       object as this object.
C       

        subroutine SIDL_Loader_isSame_f(self, iobj, retval)
        implicit none
C       in SIDL.Loader self
        integer*8 self
C       in SIDL.BaseInterface iobj
        integer*8 iobj
C       out bool retval
        logical retval
        end


C       
C       Check whether the object can support the specified interface or
C       class.  If the <code>SIDL</code> type name in <code>name</code>
C       is supported, then a reference to that object is returned with the
C       reference count incremented.  The callee will be responsible for
C       calling <code>deleteRef</code> on the returned object.  If
C       the specified type is not supported, then a null reference is
C       returned.
C       

        subroutine SIDL_Loader_queryInt_f(self, name, retval)
        implicit none
C       in SIDL.Loader self
        integer*8 self
C       in string name
        character*(*) name
C       out SIDL.BaseInterface retval
        integer*8 retval
        end


C       
C       Return whether this object is an instance of the specified type.
C       The string name must be the <code>SIDL</code> type name.  This
C       routine will return <code>true</code> if and only if a cast to
C       the string type name would succeed.
C       

        subroutine SIDL_Loader_isType_f(self, name, retval)
        implicit none
C       in SIDL.Loader self
        integer*8 self
C       in string name
        character*(*) name
C       out bool retval
        logical retval
        end


C       
C       Return the meta-data about the class implementing this interface.
C       

        subroutine SIDL_Loader_getClassInfo_f(self, retval)
        implicit none
C       in SIDL.Loader self
        integer*8 self
C       out SIDL.ClassInfo retval
        integer*8 retval
        end


C       
C       Set the search path, which is a semi-colon separated sequence of
C       URIs as described in class <code>DLL</code>.  This method will
C       invalidate any existing search path.
C       

        subroutine SIDL_Loader_setSearchPath_f(path_name)
        implicit none
C       in string path_name
        character*(*) path_name
        end


C       
C       Return the current search path.  If the search path has not been
C       set, then the search path will be taken from environment variable
C       SIDL_DLL_PATH.
C       

        subroutine SIDL_Loader_getSearchPath_f(retval)
        implicit none
C       out string retval
        character*(*) retval
        end


C       
C       Append the specified path fragment to the beginning of the
C       current search path.  If the search path has not yet been set
C       by a call to <code>setSearchPath</code>, then this fragment will
C       be appended to the path in environment variable SIDL_DLL_PATH.
C       

        subroutine SIDL_Loader_addSearchPath_f(path_fragment)
        implicit none
C       in string path_fragment
        character*(*) path_fragment
        end


C       
C       Load the specified library if it has not already been loaded.
C       The URI format is defined in class <code>DLL</code>.  The search
C       path is not searched to resolve the library name.
C       

        subroutine SIDL_Loader_loadLibrary_f(uri, retval)
        implicit none
C       in string uri
        character*(*) uri
C       out bool retval
        logical retval
        end


C       
C       Append the specified DLL to the beginning of the list of already
C       loaded DLLs.
C       

        subroutine SIDL_Loader_addDLL_f(dll)
        implicit none
C       in SIDL.DLL dll
        integer*8 dll
        end


C       
C       Unload all dynamic link libraries.  The library may no longer
C       be used to access symbol names.  When the library is actually
C       unloaded from the memory image depends on details of the operating
C       system.
C       

        subroutine SIDL_Loader_unloadLibraries_f()
        implicit none
        end


C       
C       Look up the secified symbol name.  If the symbol name cannot be
C       found in one of the already loaded libraries, then the method will
C       search through the library search path.  A null is returned if the
C       symbol could not be resolved.
C       

        subroutine SIDL_Loader_lookupSymbol_f(linker_name, retval)
        implicit none
C       in string linker_name
        character*(*) linker_name
C       out opaque retval
        integer*8 retval
        end


C       
C       Create an instance of the specified SIDL class.  If the class
C       constructor cannot be found in one of the already loaded libraries,
C       then the method will search through the library search path.  A null
C       object is returned if the symbol could not be resolved.
C       

        subroutine SIDL_Loader_createClass_f(sidl_name, retval)
        implicit none
C       in string sidl_name
        character*(*) sidl_name
C       out SIDL.BaseClass retval
        integer*8 retval
        end
