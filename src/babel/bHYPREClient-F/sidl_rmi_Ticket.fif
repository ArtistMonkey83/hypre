C       
C       File:          sidl_rmi_Ticket_Impl.f
C       Symbol:        sidl.rmi.Ticket-v0.9.15
C       Symbol Type:   interface
C       Babel Version: 1.0.0
C       Release:       $Name: V2-2-0b $
C       Revision:      @(#) $Id: sidl_rmi_Ticket.fif,v 1.3 2006/12/29 21:24:29 painter Exp $
C       Description:   Client-side documentation text for sidl.rmi.Ticket
C       
C       Copyright (c) 2000-2002, The Regents of the University of California.
C       Produced at the Lawrence Livermore National Laboratory.
C       Written by the Components Team <components@llnl.gov>
C       All rights reserved.
C       
C       This file is part of Babel. For more information, see
C       http://www.llnl.gov/CASC/components/. Please read the COPYRIGHT file
C       for Our Notice and the LICENSE file for the GNU Lesser General Public
C       License.
C       
C       This program is free software; you can redistribute it and/or modify it
C       under the terms of the GNU Lesser General Public License (as published by
C       the Free Software Foundation) version 2.1 dated February 1999.
C       
C       This program is distributed in the hope that it will be useful, but
C       WITHOUT ANY WARRANTY; without even the IMPLIED WARRANTY OF
C       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the terms and
C       conditions of the GNU Lesser General Public License for more details.
C       
C       You should have recieved a copy of the GNU Lesser General Public License
C       along with this program; if not, write to the Free Software Foundation,
C       Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
C       
C       WARNING: Automatically generated; changes will be lost
C       
C       

        THIS FILE IS DOCUMENTATION - DO NOT COMPILE IT!

C       
C       Symbol "sidl.rmi.Ticket" (version 0.9.15)
C       
C       Used in lieu of a Response in nonblocking calls
C       




C       
C       Method:  _cast[]
C       Cast method for interface and type conversions.
C       

        subroutine sidl_rmi_Ticket__cast_f(ref, retval, exception)
        implicit none
C        in opaque ref
        integer*8 ref
C        out sidl.rmi.Ticket retval
        integer*8 retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  _cast2[]
C       Cast method for interface and class type conversions.
C       

        subroutine sidl_rmi_Ticket__cast2_f(self, name, retval,
     &     exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        in string name
        character*(*) name
C        out opaque retval
        integer*8 retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  addRef[]
C       <p>
C       Add one to the intrinsic reference count in the underlying object.
C       Object in <code>sidl</code> have an intrinsic reference count.
C       Objects continue to exist as long as the reference count is
C       positive. Clients should call this method whenever they
C       create another ongoing reference to an object or interface.
C       </p>
C       <p>
C       This does not have a return value because there is no language
C       independent type that can refer to an interface or a
C       class.
C       </p>
C       

        subroutine sidl_rmi_Ticket_addRef_f(self, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  deleteRef[]
C       Decrease by one the intrinsic reference count in the underlying
C       object, and delete the object if the reference is non-positive.
C       Objects in <code>sidl</code> have an intrinsic reference count.
C       Clients should call this method whenever they remove a
C       reference to an object or interface.
C       

        subroutine sidl_rmi_Ticket_deleteRef_f(self, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  isSame[]
C       Return true if and only if <code>obj</code> refers to the same
C       object as this object.
C       

        subroutine sidl_rmi_Ticket_isSame_f(self, iobj, retval,
     &     exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        in sidl.BaseInterface iobj
        integer*8 iobj
C        out bool retval
        logical retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  isType[]
C       Return whether this object is an instance of the specified type.
C       The string name must be the <code>sidl</code> type name.  This
C       routine will return <code>true</code> if and only if a cast to
C       the string type name would succeed.
C       

        subroutine sidl_rmi_Ticket_isType_f(self, name, retval,
     &     exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        in string name
        character*(*) name
C        out bool retval
        logical retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  getClassInfo[]
C       Return the meta-data about the class implementing this interface.
C       

        subroutine sidl_rmi_Ticket_getClassInfo_f(self, retval,
     &     exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out sidl.ClassInfo retval
        integer*8 retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  block[]
C        blocks until the Response is recieved 
C       

        subroutine sidl_rmi_Ticket_block_f(self, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  test[]
C        
C       returns immediately: true iff the Response is already
C       received 
C       

        subroutine sidl_rmi_Ticket_test_f(self, retval, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out bool retval
        logical retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  createEmptyTicketBook[]
C        creates an empty container specialized for Tickets 
C       

        subroutine sidl_rmi_Ticket_createEmptyTicketBook_f(self, retval,
     &     exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out sidl.rmi.TicketBook retval
        integer*8 retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  getResponse[]
C        returns immediately: returns Response or null 
C       (NOTE: needed for implementors of communication
C       libraries, not expected for general use).
C       

        subroutine sidl_rmi_Ticket_getResponse_f(self, retval,
     &     exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out sidl.rmi.Response retval
        integer*8 retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  _exec[]
C       Select and execute a method by name
C       

        subroutine sidl_rmi_Ticket__exec_f(self, methodName, inArgs,
     &     outArgs, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        in string methodName
        character*(*) methodName
C        in sidl.rmi.Call inArgs
        integer*8 inArgs
C        in sidl.rmi.Return outArgs
        integer*8 outArgs
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  _getURL[]
C       Get the URL of the Implementation of this object (for RMI)
C       

        subroutine sidl_rmi_Ticket__getURL_f(self, retval, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out string retval
        character*(*) retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  _isRemote[]
C       TRUE if this object is remote, false if local
C       

        subroutine sidl_rmi_Ticket__isRemote_f(self, retval, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out bool retval
        logical retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  _isLocal[]
C       TRUE if this object is local, false if remote
C       

        subroutine sidl_rmi_Ticket__isLocal_f(self, retval, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        out bool retval
        logical retval
C        out sidl.BaseInterface exception
        integer*8 exception
        end


C       
C       Method:  _set_hooks[]
C       Method to set whether or not method hooks should be invoked.
C       

        subroutine sidl_rmi_Ticket__set_hooks_f(self, on, exception)
        implicit none
C        in sidl.rmi.Ticket self
        integer*8 self
C        in bool on
        logical on
C        out sidl.BaseInterface exception
        integer*8 exception
        end
